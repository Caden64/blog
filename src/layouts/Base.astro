---
interface Props {
    title?: string;
    description?: string;
}
const {title, description } = Astro.props;
import { SEO } from "astro-seo";
---
<head>
    <SEO
        title={title}
        description={description}
        openGraph={{
            basic: {
                title: title,
                type: "website",
                image: "/assets/logo.png",
            }
        }}
    />
    <meta charset="UTF-8"/>
    <link rel='icon' type='image/x-icon' href='/favicon.png' />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
</head>

<script is:inline>
    const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };
    const isDark = getThemePreference() === 'dark';
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

    if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
    }
</script>
